Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3

We need O(1) as there are many such queries asked.

class NumArray:

    def __init__(self, nums: List[int]):
        self.cache = [0]*(len(nums)+1)
        for i in range(0,len(nums)):
            self.cache[i+1] = self.cache[i] + nums[i]
        #print(self.cache)

    def sumRange(self, i: int, j: int) -> int:
        return (self.cache[j+1] - self.cache[i])
        
